@model SEP_Demo.Models.User
@{
    Layout = "~/Views/Shared/_DetailLayout.cshtml";
}


<h2><span>Thông tin tài khoản</span></h2>
@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    <div class="alert alert-success">
        <strong>Success!</strong>@ViewBag.Message
    </div>
    <button class="btn btn-default" >Trang Chủ</button>
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="main">
            <div class="container"> 
                <div class="row">
                    <div class="col-md-3">
                        <div class="menu-account">
                            <h3>
                                <span>
                                    Tài khoản
                                </span>
                            </h3>
                            <ul>
                                <li><a href="../Account//Login"><i class="fa fa-sign-in"></i> Đăng nhập</a></li>
                                <li><a href="../Account//SignUp"><i class="fa fa-key"></i> Đăng ký</a></li>
                                <li><a href="../Account//ForgetPassword"><i class="fa fa-key"></i> Quên mật khẩu</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-md-9">

                        <div class="breadcrumb clearfix">
                            <ul>
                                <li itemtype="http://data-vocabulary.org/Breadcrumb" itemscope="" class="home">
                                    <a title="Đến trang chủ" href="/" itemprop="url"><span itemprop="title">Trang chủ</span></a>
                                </li>
                                <li class="icon-li"><strong>Đăng ký tài khoản</strong> </li>
                            </ul>
                        </div>
                        <script type="text/javascript">
                            $(".link-site-more").hover(function () { $(this).find(".s-c-n").show(); }, function () { $(this).find(".s-c-n").hide(); });
                        </script>
                        <div class="register-content clearfix ">
                            <h1 class="page-heading"><span>Đăng ký tài khoản</span></h1>
                            <!-- ngIf: IsError -->
                            <!-- ngIf: IsSuccess -->
                            <!-- ngIf: InValid -->
                            <div class="col-md-8 col-md-offset-2 col-xs-12 col-sm-12 col-xs-offset-0 col-sm-offset-0">
                                <form class="form-horizontal ">
                                    <div class="form-horizontal">
                                        <br />
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                                @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                            </div>
                                        </div>



                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="Create" class="btn btn-success" />
                                            </div>
                                        </div>
                                    </div>
                                    @if (ViewBag.Message != null)
                                    {
                                    <div class="alert alert-danger">
                                        <strong>Error!</strong>@ViewBag.Message
                                    </div>
                                    }

                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}


